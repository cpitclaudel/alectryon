{
  "metadata": {
    "cache_version": "2"
  },
  "&coq": {
    "driver": [
      "Coq+SerAPI",
      "8.18.0+0.18.2"
    ],
    "metadata": {
      "sertop_args": []
    },
    "chunks": [
      "Notation \"\\mathbb{N}\" := nat.\nPrint nat. (* .unfold *)",
      "Notation \"\\mathbb{B}\" := bool.\nPrint bool. (* .unfold *)"
    ],
    "annotated": [
      [
        {
          "_type": "sentence",
          "contents": "Notation \"\\mathbb{N}\" := nat.",
          "messages": [],
          "goals": []
        },
        {
          "_type": "text",
          "contents": "\n"
        },
        {
          "_type": "sentence",
          "contents": "Print nat.",
          "messages": [
            {
              "_type": "message",
              "contents": "Inductive nat : Set :=\n    O : \\mathbb{N} | S : \\mathbb{N} -> \\mathbb{N}.\n\nArguments S _%nat_scope"
            }
          ],
          "goals": []
        },
        {
          "_type": "text",
          "contents": " (* .unfold *)"
        }
      ],
      [
        {
          "_type": "sentence",
          "contents": "Notation \"\\mathbb{B}\" := bool.",
          "messages": [],
          "goals": []
        },
        {
          "_type": "text",
          "contents": "\n"
        },
        {
          "_type": "sentence",
          "contents": "Print bool.",
          "messages": [
            {
              "_type": "message",
              "contents": "Inductive bool : Set :=\n    true : \\mathbb{B} | false : \\mathbb{B}."
            }
          ],
          "goals": []
        },
        {
          "_type": "text",
          "contents": " (* .unfold *)"
        }
      ]
    ]
  }
}